#! /usr/bin/env bash

# original credit - https://github.com/ariutta/nix-install-deb-multi-user.git
# This script draws extensively from this post:
# https://gist.github.com/joepie91/043a51a7b70be5f50f1d
# which is copied here:
# https://nixos.wiki/wiki/Install_Nix_in_multi-user_mode_on_non-NixOS
#
# It also draws from these resources:
# https://nixos.org/nix/manual/#ch-installing-source
# https://nixos.org/nix/manual/#ssec-multi-user
# http://sandervanderburg.blogspot.com/2013/06/setting-up-multi-user-nix-installation.html
# https://github.com/NixOS/nix/pull/135
# https://gist.github.com/therealpxc/c23137278462f303d2a3

set -e

tmpDir=$(mktemp -d -t nix-binary-tarball-unpack.XXXXXXXXXX)
cleanup() {
    rm -rf "$tmpDir"
}
trap cleanup EXIT INT QUIT TERM

# see https://stackoverflow.com/a/24067243/5354298
version_gt() { test "$(printf '%s\n' "$@" | sort -V | head -n 1)" != "$1"; }
# see https://stackoverflow.com/questions/592620/check-if-a-program-exists-from-a-bash-script
check_installed() { hash "$1" 2>/dev/null || { echo >&2 "I require $1 but it's not installed. Aborting. See https://nixos.org/nix/manual/#sec-prerequisites-source."; exit 1; } }

echo "Performing a multi-user installation of Nix..."

if [ "$HOME" != '/root' ]; then
	cat >&2 <<'END_HEREDOC'
Error: nix-install-deb-multi-user must be run as root.
Please cd to the dir containing this script and run it as:
  sudo -i su -c $(pwd)/nix-install-deb-multi-user
END_HEREDOC
	exit;
fi

# Checking Dependencies.
check_installed make;
check_installed bzip2;
check_installed wget;
check_installed which clang ? clang : gcc

PERL_VERSION=$(perl --version | grep -oP "\d+\.\d+")
if version_gt "5.8" "$PERL_VERSION"; then
	cat >&2 <<'END_HEREDOC'
Error: missing Perl >= 5.8.
See https://nixos.org/nix/manual/#sec-prerequisites-source.
END_HEREDOC
	exit;
fi

# Create daemon
if ! getent group nixbld; then
	groupadd -r nixbld
	for n in $(seq 1 10); do useradd -c "Nix build user $n" \
	    -d /var/empty -g nixbld -G nixbld -M -N -r -s "$(which nologin)" \
	    nixbld$n; done
fi

NIXPKGS_VERSION="18.03"
NIX_VERSION="2.0.4"
# SHA256SUM="0ca5782fc37d62238d13a620a7b4bff6a200bab1bd63003709249a776162357c";
wget "https://nixos.org/releases/nix/nix-$NIX_VERSION/nix-$NIX_VERSION.tar.xz" -P "$tmpDir";
cd "$tmpDir";
# echo "$SHA256SUM  nix-$NIX_VERSION.tar.xz" | shasum -a 256 -c -;
tar -xvf "nix-$NIX_VERSION.tar.xz";
cd "nix-$NIX_VERSION/";
./configure --enable-gc
make
make install

# Can we just use this file instead? https://github.com/NixOS/nix/blob/master/misc/systemd/nix-daemon.service.in
$(cat > "/etc/systemd/system/nix.service" <<'END_HEREDOC'
[Unit]
Description=Nix daemon

[Service]
EnvironmentFile=-/etc/default/nix
ExecStart=/usr/local/bin/nix-daemon $EXTRA_OPTS
IgnoreSIGPIPE=false
KillMode=process

[Install]
WantedBy=multi-user.target
END_HEREDOC
)
chmod 751 "/etc/systemd/system/nix.service"

touch /etc/default/nix

systemctl enable nix
/usr/local/bin/nix-daemon &
# systemctl start nix

# Set environment variables for root user
touch "$HOME/.profile";
if ! cat "$HOME/.profile" | grep 'added by Nix installer'; then
	$(cat >> "$HOME/.profile" <<'END_HEREDOC'
# added by Nix installer
export NIX_REMOTE=daemon
if [ -e "/usr/local/etc/profile.d/nix.sh" ]; then . "/usr/local/etc/profile.d/nix.sh"; fi
if [ -e "$HOME/.nix-channels" ]; then export NIX_PATH=`cat "$HOME/.nix-channels" | sed -e "s~\(.*\)\ \(.*\)~\2=$HOME/.nix-defexpr/channels/\2~g" | paste -sd ":" -`; fi
if [ -e "/root/.nix-profile/etc/profile.d/nix.sh" ]; then . "/root/.nix-profile/etc/profile.d/nix.sh"; fi
END_HEREDOC
)
fi
. "$HOME/.profile"

# Add channels and update
nix-channel --add "https://nixos.org/channels/nixos-$NIXPKGS_VERSION" nixos
nix-channel --add "https://nixos.org/channels/nixpkgs-unstable"
nix-channel --update

# Restrict access to Nix operations to root and a group called nix-users:
if ! getent group "nix-users"; then
	groupadd -r nix-users
	chgrp nix-users /nix/var/nix/daemon-socket
	chmod ug=rwx,o= /nix/var/nix/daemon-socket
fi

# Add a script called nix-setup-user to PATH.
# NOTE: Using sed to replace "NIXPKGS_VERSION_PLACEHOLDER" in script below with actual value.
SETUP_USER_SCRIPT_PATH="/usr/local/bin/nix-setup-user"
$(cat > "$SETUP_USER_SCRIPT_PATH" <<'END_HEREDOC'
# NOTE: this is only for setting up non-root users, but must be run with root permissions.

if [ $(id -u) != 0 ]; then
   echo "This script requires root permissions"
   sudo "$0" "$@"
   exit
fi

TARGET_USER="$1"

if [ ! $TARGET_USER ] || [ $(id -u $TARGET_USER > /dev/null 2>&1; echo $?) != 0 ]; then
   echo "Please specify a valid user, e.g., nix-setup-user jdoe"
   exit
fi

TARGET_USER_HOME=$(grep $TARGET_USER /etc/passwd | cut -d ':' -f6)

if [ ! -d "$TARGET_USER_HOME" ]; then
   echo "Expected home directory for $TARGET_USER at $TARGET_USER_HOME"
   exit
fi

adduser "$TARGET_USER" nix-users

SYMLINK_PATH="$TARGET_USER_HOME/.nix-profile"
PROFILE_DIR="/nix/var/nix/profiles/per-user/$TARGET_USER"

echo "Creating profile $PROFILE_DIR..."
echo "Profile symlink: $SYMLINK_PATH"

if [ -e "$SYMLINK_PATH" ]; then rm "$SYMLINK_PATH"; fi
mkdir -p "$PROFILE_DIR"
chown "$TARGET_USER" "$PROFILE_DIR"

ln -s "$PROFILE_DIR/profile" "$SYMLINK_PATH"
chown -h "$TARGET_USER" "$SYMLINK_PATH"

touch "$TARGET_USER_HOME/.profile"
echo "" >> "$TARGET_USER_HOME/.profile"
echo "# Added by nix-setup-user" >> "$TARGET_USER_HOME/.profile"
echo "export NIX_REMOTE=daemon" >> "$TARGET_USER_HOME/.profile"
echo "if [ -e \"/usr/local/etc/profile.d/nix.sh\" ]; then . \"/usr/local/etc/profile.d/nix.sh\"; fi" >> "$TARGET_USER_HOME/.profile"
echo 'if [ -e "'$TARGET_USER_HOME'/.nix-channels" ]; then export NIX_PATH=`cat "'$TARGET_USER_HOME'/.nix-channels" | sed -e "s~\(.*\)\ \(.*\)~\2='$TARGET_USER_HOME'/.nix-defexpr/channels/\2~g" | paste -sd ":" -`; fi' >> "$TARGET_USER_HOME/.profile"
echo "if [ -e \"$TARGET_USER_HOME/.nix-profile/etc/profile.d/nix.sh\" ]; then . \"$TARGET_USER_HOME/.nix-profile/etc/profile.d/nix.sh\"; fi" >> "$TARGET_USER_HOME/.profile"
echo "# Make Nix packages installed as root available to all users" >> "$TARGET_USER_HOME/.profile"
echo "if [ -e \"/nix/var/nix/profiles/default/bin\" ]; then PATH=\"$PATH:/nix/var/nix/profiles/default/bin\"; fi" >> "$TARGET_USER_HOME/.profile"

su -lc "cd; . \"$TARGET_USER_HOME/.profile\"; nix-channel --add https://nixos.org/channels/nixos-NIXPKGS_VERSION_PLACEHOLDER nixos; nix-channel --update" "$TARGET_USER"
END_HEREDOC
)
# This is a kludge, but we disabled variable substitution in the HERE_DOC above,
# so we need to use this to set NIXPKGS_VERSION_PLACEHOLDER to its correct value.
sed -i "s/NIXPKGS_VERSION_PLACEHOLDER/$NIXPKGS_VERSION/g" "$SETUP_USER_SCRIPT_PATH"

chmod u+rwx "$SETUP_USER_SCRIPT_PATH"
chmod g+rx-w "$SETUP_USER_SCRIPT_PATH"
chmod o+rx-w "$SETUP_USER_SCRIPT_PATH"

# Tell user that install finished successfully
cat <<'END_HEREDOC'
Success!
nix install complete.
nix-daemon service is running.
nix-daemon service set to init on system start.

To setup nix for user jdoe, run:
  "nix-setup-user jdoe"
END_HEREDOC
